import os
import numpy as np
import pandas as pd

path_data = '/Users/dhanley2/Documents/Personal/recursion/data'
traindf = pd.read_csv( os.path.join( path_data, 'train.csv'))#.iloc[:3000]
traincdf = pd.read_csv( os.path.join( path_data, 'train_controls.csv'))#.iloc[:3000]

# Get train groups
plate_groups = np.zeros((1108,4), int)
for sirna in range(1108):
    grp = traindf.loc[traindf.sirna==sirna,:].plate.value_counts().index.values
    assert len(grp) == 3
    plate_groups[sirna,0:3] = grp
    plate_groups[sirna,3] = 10 - grp.sum()
sirna_groups = pd.DataFrame(plate_groups).apply(lambda x : ''.join(map(str, x)) , 1)
sirna_groups = sirna_groups.factorize()[0]

# Add controls
all_sirna_groups = np.repeat(sirna_groups.max()+1, traincdf.sirna.max())
all_sirna_groups[:len(sirna_groups)] = sirna_groups

# Value counts
pd.Series(all_sirna_groups).value_counts()
'''
Out[140]: 
3    277
2    277
1    277
0    277
4     30
'''

# Print groups
print('[{}]'.format(','.join(map(str, list(all_sirna_groups)))))

'''
[0,1,2,1,3,1,1,2,1,0,1,2,0,0,0,0,0,0,0,2,2,3,2,0,3,2,1,2,2,3,0,0,3,1,3,3,0,0,3,3,1,2,2,2,2,0,1,2,1,3,0,3,2,3,0,1,1,2,0,1,2,2,3,2,2,3,2,0,0,0,1,0,2,0,1,2,3,1,2,0,1,2,0,2,3,0,3,2,1,1,3,1,2,2,1,2,3,0,3,3,2,2,1,0,0,1,0,0,2,1,0,2,1,1,3,3,0,2,2,3,3,3,3,3,1,3,1,3,0,3,2,2,2,1,3,3,1,0,2,0,0,0,3,0,1,3,2,1,3,2,0,3,0,2,0,1,0,1,1,3,2,0,1,3,2,2,2,3,3,2,3,3,1,3,3,2,0,1,2,0,3,1,2,3,3,3,3,0,1,2,3,3,1,0,2,1,2,3,3,0,0,0,0,1,0,0,2,2,0,0,3,1,1,0,3,3,2,1,2,2,0,1,1,0,1,2,0,0,2,3,0,0,2,2,3,0,2,3,1,1,0,0,1,0,3,2,3,0,3,0,3,0,3,1,1,3,1,2,1,3,0,0,2,2,0,3,1,3,1,2,0,3,1,0,1,0,1,1,3,3,0,1,1,3,2,2,0,1,0,3,1,3,0,1,0,1,1,0,0,2,3,1,1,2,0,2,0,3,1,1,3,3,1,1,3,2,0,2,0,3,1,0,3,0,1,0,3,2,0,2,2,0,0,2,2,3,2,3,3,1,1,1,2,0,0,1,1,3,1,2,1,2,1,2,0,1,0,2,0,3,1,1,3,3,2,3,1,0,3,3,0,1,1,1,0,3,2,3,0,1,3,2,3,2,2,1,0,3,1,1,2,1,1,2,3,1,3,1,1,1,1,3,3,0,2,3,0,2,2,2,3,1,2,1,2,1,0,1,0,0,0,2,3,2,2,2,0,0,2,2,0,1,3,0,2,3,1,3,3,1,0,0,1,3,3,1,3,2,3,3,1,0,2,3,2,0,1,2,0,1,1,2,2,3,3,3,2,2,0,3,0,1,0,2,0,2,0,3,1,2,3,1,1,2,3,3,1,3,0,1,3,3,2,0,3,2,0,1,0,2,1,3,2,1,3,1,1,2,1,0,3,2,3,1,1,3,3,2,0,0,3,2,0,1,0,3,0,3,0,2,3,0,1,3,0,2,2,1,1,2,0,1,2,1,2,3,3,1,3,1,2,3,1,2,3,1,1,1,2,1,0,0,2,2,3,1,1,1,0,2,3,2,1,0,0,0,1,1,3,2,2,1,1,3,2,1,3,0,1,0,3,0,0,3,0,3,0,2,1,3,2,2,0,3,1,1,1,1,3,0,0,1,0,1,3,2,3,3,1,0,1,0,1,2,1,3,1,3,0,3,0,0,3,3,0,0,3,3,0,2,2,0,2,3,3,0,3,1,3,3,2,2,3,1,2,1,0,1,3,2,1,2,2,0,3,3,3,2,0,2,1,3,3,1,3,0,1,3,3,3,0,1,2,2,0,2,3,1,0,1,3,3,1,0,2,1,0,2,0,1,1,2,0,1,1,1,2,3,1,2,0,0,0,3,2,1,3,2,3,3,0,2,2,2,2,0,2,3,0,2,2,2,2,2,1,2,2,0,3,2,3,0,1,1,1,1,0,2,3,3,1,2,2,2,2,3,0,1,0,3,1,2,1,3,1,1,2,0,3,3,1,0,0,0,3,1,2,3,0,2,0,2,3,2,1,0,1,2,2,2,2,1,0,1,0,3,3,1,1,0,3,2,3,0,2,3,1,3,3,3,1,1,0,2,0,3,3,0,3,3,3,3,0,0,0,1,2,2,1,3,2,1,0,0,3,0,0,2,1,0,1,0,3,0,2,1,0,1,3,2,0,2,2,1,0,0,2,2,3,2,3,3,0,3,3,2,3,2,1,3,1,2,0,3,2,1,2,1,0,2,0,1,0,1,1,0,3,2,3,1,1,1,0,2,1,3,2,1,2,0,1,3,2,2,0,2,0,1,3,2,1,0,0,2,1,2,3,2,2,3,2,1,3,2,0,0,3,2,0,0,0,0,2,3,2,0,3,3,1,1,3,2,3,3,3,1,2,3,0,0,1,2,2,0,0,3,2,2,0,1,1,3,1,3,0,2,2,2,2,3,3,0,1,0,1,2,0,3,1,0,0,1,1,1,1,0,1,1,2,3,3,2,3,0,0,3,2,0,0,3,3,0,2,2,0,0,1,3,1,0,0,0,3,1,3,1,2,2,3,2,1,0,0,1,2,1,0,1,1,3,2,1,2,2,3,2,0,0,0,1,2,1,1,2,2,0,2,2,0,2,0,3,2,3,0,0,1,3,2,3,1,0,1,2,2,1,1,1,3,0,2,3,0,0,3,0,1,2,2,3,2,0,0,2,1,3,3,3,2,1,2,3,2,3,0,0,1,0,2,3,1,1,1,0,1,3,1,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]
'''