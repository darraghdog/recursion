#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Sep  1 20:57:50 2019

@author: dhanley2
"""

import os
import numpy as np
import pandas as pd

path_data = '/Users/dhanley2/Documents/Personal/recursion/data'
traindf = pd.read_csv( os.path.join( path_data, 'train.csv'))#.iloc[:3000]
traincdf = pd.read_csv( os.path.join( path_data, 'train_controls.csv'))#.iloc[:3000]
subdf = pd.read_csv( os.path.join( path_data, '../sub/tts/ttsexp_mask_v31_cosv5_fold5_ddlleak.csv'))
subdf[['experiment','plate', 'well']] = subdf['id_code'].str.split('_',expand=True)


df = pd.concat([traindf, subdf], 0).reset_index(drop=True)
# Get train groups
plate_groups = np.zeros((1108,4), int)
for sirna in range(1108):
    grp = traindf.loc[df.sirna==sirna,:].plate.value_counts().index.values
    assert len(grp) == 3
    plate_groups[sirna,0:3] = grp
    plate_groups[sirna,3] = 10 - grp.sum()
sirna_groups = pd.DataFrame(plate_groups).apply(lambda x : ''.join(map(str, x)) , 1)
sirna_groups = sirna_groups.factorize()[0]

# Add controls
all_sirna_groups = np.repeat(sirna_groups.max()+1, traincdf.sirna.max())
all_sirna_groups[:len(sirna_groups)] = sirna_groups

# Value counts
pd.Series(all_sirna_groups).value_counts()


sirna_grps = [0,1,2,1,3,1,1,2,1,0,1,2,0,0,0,0,0,0,0,2,2,3,2,0,3,2,1,2,2,3,0,0,3,1,3,3,0,0,3,3,1,2,2,2,2,0,1,2,1,3,0,3,2,3,0,1,1,2,0,1,2,2,3,2,2,3,2,0,0,0,1,0,2,0,1,2,3,1,2,0,1,2,0,2,3,0,3,2,1,1,3,1,2,2,1,2,3,0,3,3,2,2,1,0,0,1,0,0,2,1,0,2,1,1,3,3,0,2,2,3,3,3,3,3,1,3,1,3,0,3,2,2,2,1,3,3,1,0,2,0,0,0,3,0,1,3,2,1,3,2,0,3,0,2,0,1,0,1,1,3,2,0,1,3,2,2,2,3,3,2,3,3,1,3,3,2,0,1,2,0,3,1,2,3,3,3,3,0,1,2,3,3,1,0,2,1,2,3,3,0,0,0,0,1,0,0,2,2,0,0,3,1,1,0,3,3,2,1,2,2,0,1,1,0,1,2,0,0,2,3,0,0,2,2,3,0,2,3,1,1,0,0,1,0,3,2,3,0,3,0,3,0,3,1,1,3,1,2,1,3,0,0,2,2,0,3,1,3,1,2,0,3,1,0,1,0,1,1,3,3,0,1,1,3,2,2,0,1,0,3,1,3,0,1,0,1,1,0,0,2,3,1,1,2,0,2,0,3,1,1,3,3,1,1,3,2,0,2,0,3,1,0,3,0,1,0,3,2,0,2,2,0,0,2,2,3,2,3,3,1,1,1,2,0,0,1,1,3,1,2,1,2,1,2,0,1,0,2,0,3,1,1,3,3,2,3,1,0,3,3,0,1,1,1,0,3,2,3,0,1,3,2,3,2,2,1,0,3,1,1,2,1,1,2,3,1,3,1,1,1,1,3,3,0,2,3,0,2,2,2,3,1,2,1,2,1,0,1,0,0,0,2,3,2,2,2,0,0,2,2,0,1,3,0,2,3,1,3,3,1,0,0,1,3,3,1,3,2,3,3,1,0,2,3,2,0,1,2,0,1,1,2,2,3,3,3,2,2,0,3,0,1,0,2,0,2,0,3,1,2,3,1,1,2,3,3,1,3,0,1,3,3,2,0,3,2,0,1,0,2,1,3,2,1,3,1,1,2,1,0,3,2,3,1,1,3,3,2,0,0,3,2,0,1,0,3,0,3,0,2,3,0,1,3,0,2,2,1,1,2,0,1,2,1,2,3,3,1,3,1,2,3,1,2,3,1,1,1,2,1,0,0,2,2,3,1,1,1,0,2,3,2,1,0,0,0,1,1,3,2,2,1,1,3,2,1,3,0,1,0,3,0,0,3,0,3,0,2,1,3,2,2,0,3,1,1,1,1,3,0,0,1,0,1,3,2,3,3,1,0,1,0,1,2,1,3,1,3,0,3,0,0,3,3,0,0,3,3,0,2,2,0,2,3,3,0,3,1,3,3,2,2,3,1,2,1,0,1,3,2,1,2,2,0,3,3,3,2,0,2,1,3,3,1,3,0,1,3,3,3,0,1,2,2,0,2,3,1,0,1,3,3,1,0,2,1,0,2,0,1,1,2,0,1,1,1,2,3,1,2,0,0,0,3,2,1,3,2,3,3,0,2,2,2,2,0,2,3,0,2,2,2,2,2,1,2,2,0,3,2,3,0,1,1,1,1,0,2,3,3,1,2,2,2,2,3,0,1,0,3,1,2,1,3,1,1,2,0,3,3,1,0,0,0,3,1,2,3,0,2,0,2,3,2,1,0,1,2,2,2,2,1,0,1,0,3,3,1,1,0,3,2,3,0,2,3,1,3,3,3,1,1,0,2,0,3,3,0,3,3,3,3,0,0,0,1,2,2,1,3,2,1,0,0,3,0,0,2,1,0,1,0,3,0,2,1,0,1,3,2,0,2,2,1,0,0,2,2,3,2,3,3,0,3,3,2,3,2,1,3,1,2,0,3,2,1,2,1,0,2,0,1,0,1,1,0,3,2,3,1,1,1,0,2,1,3,2,1,2,0,1,3,2,2,0,2,0,1,3,2,1,0,0,2,1,2,3,2,2,3,2,1,3,2,0,0,3,2,0,0,0,0,2,3,2,0,3,3,1,1,3,2,3,3,3,1,2,3,0,0,1,2,2,0,0,3,2,2,0,1,1,3,1,3,0,2,2,2,2,3,3,0,1,0,1,2,0,3,1,0,0,1,1,1,1,0,1,1,2,3,3,2,3,0,0,3,2,0,0,3,3,0,2,2,0,0,1,3,1,0,0,0,3,1,3,1,2,2,3,2,1,0,0,1,2,1,0,1,1,3,2,1,2,2,3,2,0,0,0,1,2,1,1,2,2,0,2,2,0,2,0,3,2,3,0,0,1,3,2,3,1,0,1,2,2,1,1,1,3,0,2,3,0,0,3,0,1,2,2,3,2,0,0,2,1,3,3,3,2,1,2,3,2,3,0,0,1,0,2,3,1,1,1,0,1,3,1,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]
sirna_grps = np.array(sirna_grps)

plate_grps = {}
for grp in range(4):
    sgrp = np.where(sirna_grps[:1108] == grp)[0]
    plate_grps[grp] = df[df['sirna'].isin(sgrp)][['experiment', 'plate']] \
        .drop_duplicates() \
        .apply(lambda x : '{}__{}'.format(x[0],x[1]), axis=1).tolist()
    print("', '".join(plate_grps[grp] ))
    print('--------------'*3)
        
        plate_grps[0]
        
plate_grps=\
     {0: set(['HEPG2-01__4', 'HEPG2-02__4', 'HEPG2-03__4', 'HEPG2-04__4', 'HEPG2-05__2', 'HEPG2-06__4', 'HEPG2-07__4', 'HUVEC-01__4', 'HUVEC-02__4', 'HUVEC-03__4', 'HUVEC-04__4', 'HUVEC-05__4', 'HUVEC-06__4', 'HUVEC-07__2', 'HUVEC-08__4', 'HUVEC-09__3', 'HUVEC-10__3', 'HUVEC-11__2', 'HUVEC-12__4', 'HUVEC-13__2', 'HUVEC-14__2', 'HUVEC-15__3', 'HUVEC-16__4', 'RPE-01__4', 'RPE-02__4', 'RPE-03__3', 'RPE-04__4', 'RPE-05__4', 'RPE-06__2', 'RPE-07__4', 'U2OS-01__2', 'U2OS-02__4', 'U2OS-03__4', 'HEPG2-08__1', 'HEPG2-09__2', 'HEPG2-10__4', 'HEPG2-11__4', 'HUVEC-17__4', 'HUVEC-18__4', 'HUVEC-19__3', 'HUVEC-20__3', 'HUVEC-21__1', 'HUVEC-22__4', 'HUVEC-23__4', 'HUVEC-24__1', 'RPE-08__2', 'RPE-09__4', 'RPE-10__4', 'RPE-11__4', 'U2OS-04__3', 'U2OS-05__1']), 
      1: set(['HEPG2-01__1', 'HEPG2-02__1', 'HEPG2-03__1', 'HEPG2-04__1', 'HEPG2-05__3', 'HEPG2-06__1', 'HEPG2-07__1', 'HUVEC-01__1', 'HUVEC-02__1', 'HUVEC-03__1', 'HUVEC-04__1', 'HUVEC-05__1', 'HUVEC-06__1', 'HUVEC-07__3', 'HUVEC-08__1', 'HUVEC-09__4', 'HUVEC-10__4', 'HUVEC-11__3', 'HUVEC-12__1', 'HUVEC-13__3', 'HUVEC-14__3', 'HUVEC-15__4', 'HUVEC-16__1', 'RPE-01__1', 'RPE-02__1', 'RPE-03__4', 'RPE-04__1', 'RPE-05__1', 'RPE-06__3', 'RPE-07__1', 'U2OS-01__3', 'U2OS-02__1', 'U2OS-03__1', 'HEPG2-08__2', 'HEPG2-09__3', 'HEPG2-10__1', 'HEPG2-11__1', 'HUVEC-17__1', 'HUVEC-18__1', 'HUVEC-19__4', 'HUVEC-20__4', 'HUVEC-21__2', 'HUVEC-22__1', 'HUVEC-23__1', 'HUVEC-24__2', 'RPE-08__3', 'RPE-09__1', 'RPE-10__1', 'RPE-11__1', 'U2OS-04__4', 'U2OS-05__2']),
      2: set(['HEPG2-01__2', 'HEPG2-02__2', 'HEPG2-03__2', 'HEPG2-04__2', 'HEPG2-05__4', 'HEPG2-06__2', 'HEPG2-07__2', 'HUVEC-01__2', 'HUVEC-02__2', 'HUVEC-03__2', 'HUVEC-04__2', 'HUVEC-05__2', 'HUVEC-06__2', 'HUVEC-07__4', 'HUVEC-08__2', 'HUVEC-09__1', 'HUVEC-10__1', 'HUVEC-11__4', 'HUVEC-12__2', 'HUVEC-13__4', 'HUVEC-14__4', 'HUVEC-15__1', 'HUVEC-16__2', 'RPE-01__2', 'RPE-02__2', 'RPE-03__1', 'RPE-04__2', 'RPE-05__2', 'RPE-06__4', 'RPE-07__2', 'U2OS-01__4', 'U2OS-02__2', 'U2OS-03__2', 'HEPG2-08__3', 'HEPG2-09__4', 'HEPG2-10__2', 'HEPG2-11__2', 'HUVEC-17__2', 'HUVEC-18__2', 'HUVEC-19__1', 'HUVEC-20__1', 'HUVEC-21__3', 'HUVEC-22__2', 'HUVEC-23__2', 'HUVEC-24__3', 'RPE-08__4', 'RPE-09__2', 'RPE-10__2', 'RPE-11__2', 'U2OS-04__1', 'U2OS-05__3']),
      3: set(['HEPG2-01__3', 'HEPG2-02__3', 'HEPG2-03__3', 'HEPG2-04__3', 'HEPG2-05__1', 'HEPG2-06__3', 'HEPG2-07__3', 'HUVEC-01__3', 'HUVEC-02__3', 'HUVEC-03__3', 'HUVEC-04__3', 'HUVEC-05__3', 'HUVEC-06__3', 'HUVEC-07__1', 'HUVEC-08__3', 'HUVEC-09__2', 'HUVEC-10__2', 'HUVEC-11__1', 'HUVEC-12__3', 'HUVEC-13__1', 'HUVEC-14__1', 'HUVEC-15__2', 'HUVEC-16__3', 'RPE-01__3', 'RPE-02__3', 'RPE-03__2', 'RPE-04__3', 'RPE-05__3', 'RPE-06__1', 'RPE-07__3', 'U2OS-01__1', 'U2OS-02__3', 'U2OS-03__3', 'HEPG2-08__4', 'HEPG2-09__1', 'HEPG2-10__3', 'HEPG2-11__3', 'HUVEC-17__3', 'HUVEC-18__3', 'HUVEC-19__2', 'HUVEC-20__2', 'HUVEC-21__4', 'HUVEC-22__3', 'HUVEC-23__3', 'HUVEC-24__4', 'RPE-08__1', 'RPE-09__3', 'RPE-10__3', 'RPE-11__3', 'U2OS-04__2', 'U2OS-05__4'])}